#!/usr/bin/env python3

import os
import shutil
import subprocess
import sys

root = subprocess.check_output(
    ("git", "rev-parse", "--show-toplevel"),
    text=True,
).strip()

try:
    # pre-commit
    if shutil.which("pre-commit") and os.path.isfile(
        os.path.join(root, ".pre-commit-config.yaml")
    ):
        subprocess.check_call(("pre-commit", "run"))

    # create stash for the other two
    stashed = (
        subprocess.call(("git", "stash", "push", "-q", "-k", "-u", "-m", "pre-commit"))
        == 0
    )

    # earthly
    if (
        shutil.which("earthly")
        and os.path.isfile(os.path.join(root, "Earthfile"))
        and shutil.which("docker")
        and subprocess.call(
            ("docker", "stats", "--no-stream"),
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            timeout=2,
        )
        == 0
    ):
        targets = (
            subprocess.check_output(("earthly", "ls"), text=True, cwd=root)
            .strip()
            .split("\n")
        )
        if "+pre-commit" in targets:
            subprocess.check_call(("earthly", "+pre-commit"), cwd=root)

    # justfile pre-commit
    if shutil.which("just") and os.path.isfile(os.path.join(root, "justfile")):
        recipes = [
            x.strip()
            for x in subprocess.check_output(
                ("just", "--list"), text=True, cwd=root
            ).splitlines()[1:]
        ]
        if "pre-commit" in recipes:
            subprocess.check_call(("just", "pre-commit"), cwd=root)

    changes = subprocess.call(("git", "diff", "--stat")) != 0

    # pop stash
    if stashed:
        subprocess.check_call(("git", "stash", "pop", "-q"))

    if changes:
        print("\nHooks have modified files.")
        sys.exit(1)

except subprocess.TimeoutExpired:
    pass  # oh well
